<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd">
 
 	<!-- Web setup -->
	<context:component-scan base-package="controller" />
	
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<mvc:resources mapping="/resources/**" location="/resources/" cache-period="0"/>
    <mvc:annotation-driven />
    <beans>
    	<context:annotation-config/>
    	
    	<!-- BEGIN SPRING & HIBERNATE SETUP -->
		<tx:annotation-driven transaction-manager="hibernate.manager" />
	
		<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	  		<property name="location">
	    		<value>WEB-INF/application.properties</value>
	  		</property>
		</bean>
	
	 	<bean id="hibernate.data-source" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
	       <property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
	       <property name="url" value="jdbc:mysql://localhost/${database.name}" />
	       <property name="username" value="${database.user}" />
	       <property name="password" value="${database.password}" />
	    </bean>
	
	    <bean id="hibernate.session" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
	        <property name="dataSource" ref="hibernate.data-source"/>
	        <property name="packagesToScan">
	            <list>
	                <value>domain</value>
	            </list>
	        </property>
	        <property name="hibernateProperties">
	        	<props>
					<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
					<prop key="hibernate.hbm2ddl.auto">update</prop>
                    <prop key="javax.persistence.validation.mode">none</prop>
                    <prop key="hibernate.connection.CharSet">utf8</prop>
        			<prop key="hibernate.connection.characterEncoding">utf8</prop>
        			<prop key="hibernate.connection.useUnicode">true</prop>
				</props>
	        </property>
	    </bean>
	
	    <bean id="hibernate.manager" class="org.springframework.orm.hibernate5.HibernateTransactionManager" >
	        <property name="sessionFactory" ref="hibernate.session" />
	    </bean>
	
		<bean id="validator.factory" 
	    	class="javax.validation.Validation" 
	    	factory-method="buildDefaultValidatorFactory" />
		<!-- END SPRING & HIBERNATE SETUP -->
		
		<!-- Validators -->
		<bean id="validator" 
	    	factory-bean="validator.factory"
	    	factory-method="getValidator" />
	
		<!-- Repositories -->
	    <bean id="repo.conference" class="repo.ConferenceRepository">
	    </bean>
	    
	    <bean id="repo.edition" class="repo.EditionRepository">
	    </bean>
	    
	    <bean id="repo.proposal" class="repo.ProposalRepository">
	    </bean>
	    
	    <bean id="repo.user" class="repo.UserRepository">
	    </bean>
	    
	    <bean id="repo.topic" class="repo.TopicRepository">
	    </bean>
	
		<!-- Services -->
	    <bean id="service.conference" class="service.ConferenceService">
	        <constructor-arg ref="repo.conference"></constructor-arg>
	    </bean>
	
	    <bean id="service.user" class="service.UserService">
	    	<constructor-arg ref="repo.user"></constructor-arg>
	    </bean>
 	</beans>
</beans>